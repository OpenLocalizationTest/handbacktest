<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="handtest-oldev" original="markdown" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>testmdarticle</source>
            <target state="new">testmdarticle</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>&lt;properties 
    pageTitle="Authentication in Azure App Service API apps and mobile apps" 
    description="Learn how to configure and use authentication for API apps and mobile apps in Azure app service."</source>
            <target state="new">&lt;properties 
    pageTitle="Authentication in Azure App Service API apps and mobile apps" 
    description="Learn how to configure and use authentication for API apps and mobile apps in Azure app service."</target>
          </trans-unit>
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>services="app-service" 
    documentationCenter="" 
    authors="tdykstra" 
    manager="wpickett" 
    editor="jimbe"/&gt;</source>
            <target state="new">services="app-service" 
    documentationCenter="" 
    authors="tdykstra" 
    manager="wpickett" 
    editor="jimbe"/&gt;</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>&lt;tags 
    ms.service="app-service" 
    ms.workload="web" 
    ms.tgt_pltfrm="na" 
    ms.devlang="na" 
    ms.topic="article" 
    ms.date="06/30/2015" 
    ms.author="tdykstra"/&gt;</source>
            <target state="new">&lt;tags 
    ms.service="app-service" 
    ms.workload="web" 
    ms.tgt_pltfrm="na" 
    ms.devlang="na" 
    ms.topic="article" 
    ms.date="06/30/2015" 
    ms.author="tdykstra"/&gt;</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>Authentication for API apps and mobile apps in Azure App Service</source>
            <target state="new">Authentication for API apps and mobile apps in Azure App Service</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source>Overview</source>
            <target state="new">Overview</target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>This article explains the built-in authentication features for </source>
            <target state="new">This article explains the built-in authentication features for </target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>API apps</source>
            <target state="new">API apps</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source> and </source>
            <target state="new"> and </target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source>mobile apps</source>
            <target state="new">mobile apps</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>.</source>
            <target state="new">.</target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>The </source>
            <target state="new">The </target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source> section at the end of the article provides links to related how-to documentation.</source>
            <target state="new"> section at the end of the article provides links to related how-to documentation.</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source>Azure App Service gateway</source>
            <target state="new">Azure App Service gateway</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>Azure App Service offers built-in authentication services that implement </source>
            <target state="new">Azure App Service offers built-in authentication services that implement </target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source>OAuth 2.0</source>
            <target state="new">OAuth 2.0</target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source> and </source>
            <target state="new"> and </target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>OpenID Connect</source>
            <target state="new">OpenID Connect</target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source> and work with multiple </source>
            <target state="new"> and work with multiple </target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>identity providers</source>
            <target state="new">identity providers</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>.</source>
            <target state="new">.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>An identity provider is an external service, trusted by Azure App Service, that authenticates your app's users.</source>
            <target state="new">An identity provider is an external service, trusted by Azure App Service, that authenticates your app's users.</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>App Service supports the most popular identity providers:</source>
            <target state="new">App Service supports the most popular identity providers:</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Azure Active Directory</source>
            <target state="new">Azure Active Directory</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Microsoft Account</source>
            <target state="new">Microsoft Account</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>Google</source>
            <target state="new">Google</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>Twitter</source>
            <target state="new">Twitter</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Facebook</source>
            <target state="new">Facebook</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>Gateway architecture</source>
            <target state="new">Gateway architecture</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>Any Azure resource group that contains API apps or mobile apps includes a </source>
            <target state="new">Any Azure resource group that contains API apps or mobile apps includes a </target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>gateway</source>
            <target state="new">gateway</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>.</source>
            <target state="new">.</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>The gateway is an Azure resource that runs in a web app and handles administrative tasks including authentication for API apps and mobile apps in the resource group.</source>
            <target state="new">The gateway is an Azure resource that runs in a web app and handles administrative tasks including authentication for API apps and mobile apps in the resource group.</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>The gateway handles login procedures, manages tokens, and prevents unauthenticated calls from reaching API apps that are </source>
            <target state="new">The gateway handles login procedures, manages tokens, and prevents unauthenticated calls from reaching API apps that are </target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>configured to require authenticated access</source>
            <target state="new">configured to require authenticated access</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>.</source>
            <target state="new">.</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>The gateway can control access to API apps because all incoming HTTP requests destined for API apps in the resource group are routed through the gateway.</source>
            <target state="new">The gateway can control access to API apps because all incoming HTTP requests destined for API apps in the resource group are routed through the gateway.</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>The following diagram illustrates these gateway functions.</source>
            <target state="new">The following diagram illustrates these gateway functions.</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>Gateway features</source>
            <target state="new">Gateway features</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>The gateway authentication services offer several advantages over running your own implementation of OAuth 2.0:</source>
            <target state="new">The gateway authentication services offer several advantages over running your own implementation of OAuth 2.0:</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>Microsoft provides SDKs that enable you to perform authentication and authorization tasks using a simplified syntax.</source>
            <target state="new">Microsoft provides SDKs that enable you to perform authentication and authorization tasks using a simplified syntax.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>Because App Service handles more authentication tasks, your development and testing time is minimized, and you avoid most or all of the impact of changes in provider implementations of OAuth.</source>
            <target state="new">Because App Service handles more authentication tasks, your development and testing time is minimized, and you avoid most or all of the impact of changes in provider implementations of OAuth.</target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>If you have multiple applications to protect and you keep them in one resource group, you only need one client ID and client secret for each authentication provider, because there is only one redirect URL for the gateway.</source>
            <target state="new">If you have multiple applications to protect and you keep them in one resource group, you only need one client ID and client secret for each authentication provider, because there is only one redirect URL for the gateway.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Monitoring and troubleshooting are easier because you can monitor authentication-related traffic for an entire resource group by monitoring the gateway.</source>
            <target state="new">Monitoring and troubleshooting are easier because you can monitor authentication-related traffic for an entire resource group by monitoring the gateway.</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>Debugging is easier because you can configure a program to use the gateway while running in debug mode locally, and you don't have to change redirect URLs in your identity provider account.</source>
            <target state="new">Debugging is easier because you can configure a program to use the gateway while running in debug mode locally, and you don't have to change redirect URLs in your identity provider account.</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>Server flow vs. client flow</source>
            <target state="new">Server flow vs. client flow</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>The App Service gateway offers two ways to authenticate clients:  </source>
            <target state="new">The App Service gateway offers two ways to authenticate clients:  </target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>client flow</source>
            <target state="new">client flow</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="50" translate="yes" xml:space="preserve">
            <source> and </source>
            <target state="new"> and </target>
          </trans-unit>
        </group>
        <group id="50">
          <trans-unit id="51" translate="yes" xml:space="preserve">
            <source>server flow</source>
            <target state="new">server flow</target>
          </trans-unit>
        </group>
        <group id="51">
          <trans-unit id="52" translate="yes" xml:space="preserve">
            <source>.</source>
            <target state="new">.</target>
          </trans-unit>
        </group>
        <group id="52">
          <trans-unit id="53" translate="yes" xml:space="preserve">
            <source>In both flows, the client application sends the user credentials (typically, user name and password) directly to the identity provider.</source>
            <target state="new">In both flows, the client application sends the user credentials (typically, user name and password) directly to the identity provider.</target>
          </trans-unit>
        </group>
        <group id="53">
          <trans-unit id="54" translate="yes" xml:space="preserve">
            <source>Neither the gateway nor your application receives user credentials in either flow.</source>
            <target state="new">Neither the gateway nor your application receives user credentials in either flow.</target>
          </trans-unit>
        </group>
        <group id="54">
          <trans-unit id="55" translate="yes" xml:space="preserve">
            <source>Client flow</source>
            <target state="new">Client flow</target>
          </trans-unit>
        </group>
        <group id="55">
          <trans-unit id="56" translate="yes" xml:space="preserve">
            <source>Client flow means the client application communicates directly with the identity provider to get the provider's access token.</source>
            <target state="new">Client flow means the client application communicates directly with the identity provider to get the provider's access token.</target>
          </trans-unit>
        </group>
        <group id="56">
          <trans-unit id="57" translate="yes" xml:space="preserve">
            <source>The client application sends the provider's access token to the gateway.</source>
            <target state="new">The client application sends the provider's access token to the gateway.</target>
          </trans-unit>
        </group>
        <group id="57">
          <trans-unit id="58" translate="yes" xml:space="preserve">
            <source>The gateway creates and sends to the client a user context token.</source>
            <target state="new">The gateway creates and sends to the client a user context token.</target>
          </trans-unit>
        </group>
        <group id="58">
          <trans-unit id="59" translate="yes" xml:space="preserve">
            <source>This user context token is also known as a Zumo token, from the original code name for </source>
            <target state="new">This user context token is also known as a Zumo token, from the original code name for </target>
          </trans-unit>
        </group>
        <group id="59">
          <trans-unit id="60" translate="yes" xml:space="preserve">
            <source>Azure Mobile Services</source>
            <target state="new">Azure Mobile Services</target>
          </trans-unit>
        </group>
        <group id="60">
          <trans-unit id="61" translate="yes" xml:space="preserve">
            <source>.</source>
            <target state="new">.</target>
          </trans-unit>
        </group>
        <group id="61">
          <trans-unit id="62" translate="yes" xml:space="preserve">
            <source>(Authentication services for API Apps and Mobile Apps are built on the same architecture originally developed for Mobile Services.)</source>
            <target state="new">(Authentication services for API Apps and Mobile Apps are built on the same architecture originally developed for Mobile Services.)</target>
          </trans-unit>
        </group>
        <group id="62">
          <trans-unit id="63" translate="yes" xml:space="preserve">
            <source>The following diagram illustrates this flow.</source>
            <target state="new">The following diagram illustrates this flow.</target>
          </trans-unit>
        </group>
        <group id="63">
          <trans-unit id="64" translate="yes" xml:space="preserve">
            <source>The client then provides the Zumo token in HTTP requests when it calls protected API apps or mobile apps.</source>
            <target state="new">The client then provides the Zumo token in HTTP requests when it calls protected API apps or mobile apps.</target>
          </trans-unit>
        </group>
        <group id="64">
          <trans-unit id="65" translate="yes" xml:space="preserve">
            <source>The gateway stores the provider tokens and keeps track of which ones are associated with which Zumo tokens.</source>
            <target state="new">The gateway stores the provider tokens and keeps track of which ones are associated with which Zumo tokens.</target>
          </trans-unit>
        </group>
        <group id="65">
          <trans-unit id="66" translate="yes" xml:space="preserve">
            <source>Server flow</source>
            <target state="new">Server flow</target>
          </trans-unit>
        </group>
        <group id="66">
          <trans-unit id="67" translate="yes" xml:space="preserve">
            <source>Server flow means the client application relies on the gateway to communicate with the identity provider to initiate login.</source>
            <target state="new">Server flow means the client application relies on the gateway to communicate with the identity provider to initiate login.</target>
          </trans-unit>
        </group>
        <group id="67">
          <trans-unit id="68" translate="yes" xml:space="preserve">
            <source>The client browser goes to a gateway URL, and the gateway redirects the request to the identity provider's login page.</source>
            <target state="new">The client browser goes to a gateway URL, and the gateway redirects the request to the identity provider's login page.</target>
          </trans-unit>
        </group>
        <group id="68">
          <trans-unit id="69" translate="yes" xml:space="preserve">
            <source>After the user logs in, the gateway gets the identity provider's token, creates the Zumo token, and sends the Zumo token to the client.</source>
            <target state="new">After the user logs in, the gateway gets the identity provider's token, creates the Zumo token, and sends the Zumo token to the client.</target>
          </trans-unit>
        </group>
        <group id="69">
          <trans-unit id="70" translate="yes" xml:space="preserve">
            <source>Subsequent interaction between the client application and protected API apps or mobile apps is handled the same as for client flow:  the client provides the Zumo token in HTTP requests.</source>
            <target state="new">Subsequent interaction between the client application and protected API apps or mobile apps is handled the same as for client flow:  the client provides the Zumo token in HTTP requests.</target>
          </trans-unit>
        </group>
        <group id="70">
          <trans-unit id="71" translate="yes" xml:space="preserve">
            <source>How to choose between client flow and server flow</source>
            <target state="new">How to choose between client flow and server flow</target>
          </trans-unit>
        </group>
        <group id="71">
          <trans-unit id="72" translate="yes" xml:space="preserve">
            <source>The client flow is typically the best choice if the identity provider that you want to use has an SDK for the client platform that you want to support.</source>
            <target state="new">The client flow is typically the best choice if the identity provider that you want to use has an SDK for the client platform that you want to support.</target>
          </trans-unit>
        </group>
        <group id="72">
          <trans-unit id="73" translate="yes" xml:space="preserve">
            <source>Client flow provides the best user experience because it reduces the number of times the user has to enter credentials.</source>
            <target state="new">Client flow provides the best user experience because it reduces the number of times the user has to enter credentials.</target>
          </trans-unit>
        </group>
        <group id="73">
          <trans-unit id="74" translate="yes" xml:space="preserve">
            <source>For example, if your user has an android device, they probably have a Google account associated with their device, so if they can use that account without having to re-enter their user name and password, that makes for a better user experience.</source>
            <target state="new">For example, if your user has an android device, they probably have a Google account associated with their device, so if they can use that account without having to re-enter their user name and password, that makes for a better user experience.</target>
          </trans-unit>
        </group>
        <group id="74">
          <trans-unit id="75" translate="yes" xml:space="preserve">
            <source>Same thing with a Facebook account in an Android, iOS, or Windows Phone device, or a Microsoft account on a Windows desktop or Windows Phone.</source>
            <target state="new">Same thing with a Facebook account in an Android, iOS, or Windows Phone device, or a Microsoft account on a Windows desktop or Windows Phone.</target>
          </trans-unit>
        </group>
        <group id="75">
          <trans-unit id="76" translate="yes" xml:space="preserve">
            <source>In other scenarios the server flow may be a better choice: </source>
            <target state="new">In other scenarios the server flow may be a better choice: </target>
          </trans-unit>
        </group>
        <group id="76">
          <trans-unit id="77" translate="yes" xml:space="preserve">
            <source>There is no native client SDK for the identity provider and client platform you want to support.</source>
            <target state="new">There is no native client SDK for the identity provider and client platform you want to support.</target>
          </trans-unit>
        </group>
        <group id="77">
          <trans-unit id="78" translate="yes" xml:space="preserve">
            <source>You want to get something into production quickly and improve the user experience as time permits later.</source>
            <target state="new">You want to get something into production quickly and improve the user experience as time permits later.</target>
          </trans-unit>
        </group>
        <group id="78">
          <trans-unit id="79" translate="yes" xml:space="preserve">
            <source>The server flow lets Azure App Service do more of the authentication work, which minimizes the amount of development and testing you have to do.</source>
            <target state="new">The server flow lets Azure App Service do more of the authentication work, which minimizes the amount of development and testing you have to do.</target>
          </trans-unit>
        </group>
        <group id="79">
          <trans-unit id="80" translate="yes" xml:space="preserve">
            <source>On-behalf-of outgoing calls to SaaS platforms</source>
            <target state="new">On-behalf-of outgoing calls to SaaS platforms</target>
          </trans-unit>
        </group>
        <group id="80">
          <trans-unit id="81" translate="yes" xml:space="preserve">
            <source>You can write code to make outgoing calls to Software-as-a-Service (SaaS) platforms on behalf of a logged-in user or you can use a </source>
            <target state="new">You can write code to make outgoing calls to Software-as-a-Service (SaaS) platforms on behalf of a logged-in user or you can use a </target>
          </trans-unit>
        </group>
        <group id="81">
          <trans-unit id="82" translate="yes" xml:space="preserve">
            <source>connector API app</source>
            <target state="new">connector API app</target>
          </trans-unit>
        </group>
        <group id="82">
          <trans-unit id="83" translate="yes" xml:space="preserve">
            <source>.</source>
            <target state="new">.</target>
          </trans-unit>
        </group>
        <group id="83">
          <trans-unit id="84" translate="yes" xml:space="preserve">
            <source>For example, to post a tweet from the user's Twitter account you can use </source>
            <target state="new">For example, to post a tweet from the user's Twitter account you can use </target>
          </trans-unit>
        </group>
        <group id="84">
          <trans-unit id="85" translate="yes" xml:space="preserve">
            <source>a Twitter SDK</source>
            <target state="new">a Twitter SDK</target>
          </trans-unit>
        </group>
        <group id="85">
          <trans-unit id="86" translate="yes" xml:space="preserve">
            <source>, or provision a </source>
            <target state="new">, or provision a </target>
          </trans-unit>
        </group>
        <group id="86">
          <trans-unit id="87" translate="yes" xml:space="preserve">
            <source>Twitter connector</source>
            <target state="new">Twitter connector</target>
          </trans-unit>
        </group>
        <group id="87">
          <trans-unit id="88" translate="yes" xml:space="preserve">
            <source> in your Azure subscription and call that.</source>
            <target state="new"> in your Azure subscription and call that.</target>
          </trans-unit>
        </group>
        <group id="88">
          <trans-unit id="89" translate="yes" xml:space="preserve">
            <source>This section is about accessing a SaaS platform from code that runs in an API app or mobile app.</source>
            <target state="new">This section is about accessing a SaaS platform from code that runs in an API app or mobile app.</target>
          </trans-unit>
        </group>
        <group id="89">
          <trans-unit id="90" translate="yes" xml:space="preserve">
            <source>&lt;a id="obotoidprovider"&gt;&lt;/a&gt; Using the identity provider token</source>
            <target state="new">&lt;a id="obotoidprovider"&gt;&lt;/a&gt; Using the identity provider token</target>
          </trans-unit>
        </group>
        <group id="90">
          <trans-unit id="91" translate="yes" xml:space="preserve">
            <source>The gateway maintains a </source>
            <target state="new">The gateway maintains a </target>
          </trans-unit>
        </group>
        <group id="91">
          <trans-unit id="92" translate="yes" xml:space="preserve">
            <source>token store</source>
            <target state="new">token store</target>
          </trans-unit>
        </group>
        <group id="92">
          <trans-unit id="93" translate="yes" xml:space="preserve">
            <source> in which it associates a Zumo token with one or more identity provider access tokens and refresh tokens.</source>
            <target state="new"> in which it associates a Zumo token with one or more identity provider access tokens and refresh tokens.</target>
          </trans-unit>
        </group>
        <group id="93">
          <trans-unit id="94" translate="yes" xml:space="preserve">
            <source>When an HTTP request with a valid Zumo token is received, the gateway knows which identity provider tokens pertain to that user.</source>
            <target state="new">When an HTTP request with a valid Zumo token is received, the gateway knows which identity provider tokens pertain to that user.</target>
          </trans-unit>
        </group>
        <group id="94">
          <trans-unit id="95" translate="yes" xml:space="preserve">
            <source>When the code running in your API app or mobile app needs to make a call to a protected resource on behalf of the logged-on user, it can retrieve and use the identity provider's token from the gateway's token store, as shown in the following diagram.</source>
            <target state="new">When the code running in your API app or mobile app needs to make a call to a protected resource on behalf of the logged-on user, it can retrieve and use the identity provider's token from the gateway's token store, as shown in the following diagram.</target>
          </trans-unit>
        </group>
        <group id="95">
          <trans-unit id="96" translate="yes" xml:space="preserve">
            <source>The diagram assumes that the client has already authenticated with the gateway and has the Zumo token.</source>
            <target state="new">The diagram assumes that the client has already authenticated with the gateway and has the Zumo token.</target>
          </trans-unit>
        </group>
        <group id="96">
          <trans-unit id="97" translate="yes" xml:space="preserve">
            <source>For example, suppose the identity provider is Azure Active Directory (AAD), and your API app wants to use the AAD access token to call the AAD Graph API or request access to a SharePoint site that the user has permissions for.</source>
            <target state="new">For example, suppose the identity provider is Azure Active Directory (AAD), and your API app wants to use the AAD access token to call the AAD Graph API or request access to a SharePoint site that the user has permissions for.</target>
          </trans-unit>
        </group>
        <group id="97">
          <trans-unit id="98" translate="yes" xml:space="preserve">
            <source>You can send a request to the gateway to retrieve the AAD token, then use the AAD token to call the Graph API or to get an access token for the SharePoint site.</source>
            <target state="new">You can send a request to the gateway to retrieve the AAD token, then use the AAD token to call the Graph API or to get an access token for the SharePoint site.</target>
          </trans-unit>
        </group>
        <group id="98">
          <trans-unit id="99" translate="yes" xml:space="preserve">
            <source>&lt;a id="obotosaas"&gt;&lt;/a&gt;Getting user consent to access other resources</source>
            <target state="new">&lt;a id="obotosaas"&gt;&lt;/a&gt;Getting user consent to access other resources</target>
          </trans-unit>
        </group>
        <group id="99">
          <trans-unit id="100" translate="yes" xml:space="preserve">
            <source>The gateway also has built-in features for getting user consent when you want to access resources secured by a provider other than the original identity provider.</source>
            <target state="new">The gateway also has built-in features for getting user consent when you want to access resources secured by a provider other than the original identity provider.</target>
          </trans-unit>
        </group>
        <group id="100">
          <trans-unit id="101" translate="yes" xml:space="preserve">
            <source>For example, for a user who signs in using Azure Active Directory, you might want to access files in the user's Dropbox account.</source>
            <target state="new">For example, for a user who signs in using Azure Active Directory, you might want to access files in the user's Dropbox account.</target>
          </trans-unit>
        </group>
        <group id="101">
          <trans-unit id="102" translate="yes" xml:space="preserve">
            <source>The app service gateway includes built-in support for getting the user's consent to such access from the following providers:</source>
            <target state="new">The app service gateway includes built-in support for getting the user's consent to such access from the following providers:</target>
          </trans-unit>
        </group>
        <group id="102">
          <trans-unit id="103" translate="yes" xml:space="preserve">
            <source>Box</source>
            <target state="new">Box</target>
          </trans-unit>
        </group>
        <group id="103">
          <trans-unit id="104" translate="yes" xml:space="preserve">
            <source>DropBox</source>
            <target state="new">DropBox</target>
          </trans-unit>
        </group>
        <group id="104">
          <trans-unit id="105" translate="yes" xml:space="preserve">
            <source>Facebook</source>
            <target state="new">Facebook</target>
          </trans-unit>
        </group>
        <group id="105">
          <trans-unit id="106" translate="yes" xml:space="preserve">
            <source>Google</source>
            <target state="new">Google</target>
          </trans-unit>
        </group>
        <group id="106">
          <trans-unit id="107" translate="yes" xml:space="preserve">
            <source>Office365</source>
            <target state="new">Office365</target>
          </trans-unit>
        </group>
        <group id="107">
          <trans-unit id="108" translate="yes" xml:space="preserve">
            <source>OneDrive</source>
            <target state="new">OneDrive</target>
          </trans-unit>
        </group>
        <group id="108">
          <trans-unit id="109" translate="yes" xml:space="preserve">
            <source>QuickBooks</source>
            <target state="new">QuickBooks</target>
          </trans-unit>
        </group>
        <group id="109">
          <trans-unit id="110" translate="yes" xml:space="preserve">
            <source>Salesforce</source>
            <target state="new">Salesforce</target>
          </trans-unit>
        </group>
        <group id="110">
          <trans-unit id="111" translate="yes" xml:space="preserve">
            <source>SharePointOnline</source>
            <target state="new">SharePointOnline</target>
          </trans-unit>
        </group>
        <group id="111">
          <trans-unit id="112" translate="yes" xml:space="preserve">
            <source>Twitter</source>
            <target state="new">Twitter</target>
          </trans-unit>
        </group>
        <group id="112">
          <trans-unit id="113" translate="yes" xml:space="preserve">
            <source>Yammer</source>
            <target state="new">Yammer</target>
          </trans-unit>
        </group>
        <group id="113">
          <trans-unit id="114" translate="yes" xml:space="preserve">
            <source>Azure Active Directory</source>
            <target state="new">Azure Active Directory</target>
          </trans-unit>
        </group>
        <group id="114">
          <trans-unit id="115" translate="yes" xml:space="preserve">
            <source>Microsoft Account</source>
            <target state="new">Microsoft Account</target>
          </trans-unit>
        </group>
        <group id="115">
          <trans-unit id="116" translate="yes" xml:space="preserve">
            <source>For these providers, the gateway maintains access tokens and associates them with the Zumo token, as it does for the identity provider access token.</source>
            <target state="new">For these providers, the gateway maintains access tokens and associates them with the Zumo token, as it does for the identity provider access token.</target>
          </trans-unit>
        </group>
        <group id="116">
          <trans-unit id="117" translate="yes" xml:space="preserve">
            <source>The process of getting user consent and calling a SaaS platform is illustrated in the following diagram.</source>
            <target state="new">The process of getting user consent and calling a SaaS platform is illustrated in the following diagram.</target>
          </trans-unit>
        </group>
        <group id="117">
          <trans-unit id="118" translate="yes" xml:space="preserve">
            <source>The diagram assumes that the client has already authenticated with the gateway and has the Zumo token.</source>
            <target state="new">The diagram assumes that the client has already authenticated with the gateway and has the Zumo token.</target>
          </trans-unit>
        </group>
        <group id="118">
          <trans-unit id="119" translate="yes" xml:space="preserve">
            <source>The App Service runtime support and SDKs make it relatively easy to write code that accesses resources secured by one of these providers.</source>
            <target state="new">The App Service runtime support and SDKs make it relatively easy to write code that accesses resources secured by one of these providers.</target>
          </trans-unit>
        </group>
        <group id="119">
          <trans-unit id="120" translate="yes" xml:space="preserve">
            <source>There is a preliminary step not shown in the diagram: you have to set up an account with the provider and configure the provider's client ID and client secret settings in Azure App Service.</source>
            <target state="new">There is a preliminary step not shown in the diagram: you have to set up an account with the provider and configure the provider's client ID and client secret settings in Azure App Service.</target>
          </trans-unit>
        </group>
        <group id="120">
          <trans-unit id="121" translate="yes" xml:space="preserve">
            <source>For these and many other providers you can also access secured resources by using a prepackaged </source>
            <target state="new">For these and many other providers you can also access secured resources by using a prepackaged </target>
          </trans-unit>
        </group>
        <group id="121">
          <trans-unit id="122" translate="yes" xml:space="preserve">
            <source>connector API app</source>
            <target state="new">connector API app</target>
          </trans-unit>
        </group>
        <group id="122">
          <trans-unit id="123" translate="yes" xml:space="preserve">
            <source>.</source>
            <target state="new">.</target>
          </trans-unit>
        </group>
        <group id="123">
          <trans-unit id="124" translate="yes" xml:space="preserve">
            <source>SDK availability</source>
            <target state="new">SDK availability</target>
          </trans-unit>
        </group>
        <group id="124">
          <trans-unit id="125" translate="yes" xml:space="preserve">
            <source>For API apps, The SDK for .NET provides authentication functionality:</source>
            <target state="new">For API apps, The SDK for .NET provides authentication functionality:</target>
          </trans-unit>
        </group>
        <group id="125">
          <trans-unit id="126" translate="yes" xml:space="preserve">
            <source>Microsoft.Azure.AppService</source>
            <target state="new">Microsoft.Azure.AppService</target>
          </trans-unit>
        </group>
        <group id="126">
          <trans-unit id="127" translate="yes" xml:space="preserve">
            <source> - For use in an API app client.</source>
            <target state="new"> - For use in an API app client.</target>
          </trans-unit>
        </group>
        <group id="127">
          <trans-unit id="128" translate="yes" xml:space="preserve">
            <source>Microsoft.Azure.AppService.ApiApps.Service</source>
            <target state="new">Microsoft.Azure.AppService.ApiApps.Service</target>
          </trans-unit>
        </group>
        <group id="128">
          <trans-unit id="129" translate="yes" xml:space="preserve">
            <source> - For use in a Web API project that runs in an API app.</source>
            <target state="new"> - For use in a Web API project that runs in an API app.</target>
          </trans-unit>
        </group>
        <group id="129">
          <trans-unit id="130" translate="yes" xml:space="preserve">
            <source>In addition, Visual Studio can automatically generate code that works with the SDK for .NET to further simplify the code you write to call your API app.</source>
            <target state="new">In addition, Visual Studio can automatically generate code that works with the SDK for .NET to further simplify the code you write to call your API app.</target>
          </trans-unit>
        </group>
        <group id="130">
          <trans-unit id="131" translate="yes" xml:space="preserve">
            <source>For more information, see </source>
            <target state="new">For more information, see </target>
          </trans-unit>
        </group>
        <group id="131">
          <trans-unit id="132" translate="yes" xml:space="preserve">
            <source>Consume an API app in Azure App Service from a .NET client</source>
            <target state="new">Consume an API app in Azure App Service from a .NET client</target>
          </trans-unit>
        </group>
        <group id="132">
          <trans-unit id="133" translate="yes" xml:space="preserve">
            <source>.</source>
            <target state="new">.</target>
          </trans-unit>
        </group>
        <group id="133">
          <trans-unit id="134" translate="yes" xml:space="preserve">
            <source>For Mobile Apps, SDKs are available for the following platforms:</source>
            <target state="new">For Mobile Apps, SDKs are available for the following platforms:</target>
          </trans-unit>
        </group>
        <group id="134">
          <trans-unit id="135" translate="yes" xml:space="preserve">
            <source>.NET Server</source>
            <target state="new">.NET Server</target>
          </trans-unit>
        </group>
        <group id="135">
          <trans-unit id="136" translate="yes" xml:space="preserve">
            <source>iOS</source>
            <target state="new">iOS</target>
          </trans-unit>
        </group>
        <group id="136">
          <trans-unit id="137" translate="yes" xml:space="preserve">
            <source>Xamarin iOS</source>
            <target state="new">Xamarin iOS</target>
          </trans-unit>
        </group>
        <group id="137">
          <trans-unit id="138" translate="yes" xml:space="preserve">
            <source>Xamarin Android</source>
            <target state="new">Xamarin Android</target>
          </trans-unit>
        </group>
        <group id="138">
          <trans-unit id="139" translate="yes" xml:space="preserve">
            <source>Windows</source>
            <target state="new">Windows</target>
          </trans-unit>
        </group>
        <group id="139">
          <trans-unit id="140" translate="yes" xml:space="preserve">
            <source>JavaScript (tutorial in development)</source>
            <target state="new">JavaScript (tutorial in development)</target>
          </trans-unit>
        </group>
        <group id="140">
          <trans-unit id="141" translate="yes" xml:space="preserve">
            <source>Alternative authentication methods</source>
            <target state="new">Alternative authentication methods</target>
          </trans-unit>
        </group>
        <group id="141">
          <trans-unit id="142" translate="yes" xml:space="preserve">
            <source>If the gateway authentication services don't meet the needs of your app, you can handle authentication yourself, or use the Azure API Management service.</source>
            <target state="new">If the gateway authentication services don't meet the needs of your app, you can handle authentication yourself, or use the Azure API Management service.</target>
          </trans-unit>
        </group>
        <group id="142">
          <trans-unit id="143" translate="yes" xml:space="preserve">
            <source>&lt;a id="doityourself"&gt;&lt;/a&gt;Do-it-yourself authentication</source>
            <target state="new">&lt;a id="doityourself"&gt;&lt;/a&gt;Do-it-yourself authentication</target>
          </trans-unit>
        </group>
        <group id="143">
          <trans-unit id="144" translate="yes" xml:space="preserve">
            <source>You can run an authentication framework such as </source>
            <target state="new">You can run an authentication framework such as </target>
          </trans-unit>
        </group>
        <group id="144">
          <trans-unit id="145" translate="yes" xml:space="preserve">
            <source>ASP.NET Identity</source>
            <target state="new">ASP.NET Identity</target>
          </trans-unit>
        </group>
        <group id="145">
          <trans-unit id="146" translate="yes" xml:space="preserve">
            <source> or </source>
            <target state="new"> or </target>
          </trans-unit>
        </group>
        <group id="146">
          <trans-unit id="147" translate="yes" xml:space="preserve">
            <source>Thinktecture</source>
            <target state="new">Thinktecture</target>
          </trans-unit>
        </group>
        <group id="147">
          <trans-unit id="148" translate="yes" xml:space="preserve">
            <source> on Azure.</source>
            <target state="new"> on Azure.</target>
          </trans-unit>
        </group>
        <group id="148">
          <trans-unit id="149" translate="yes" xml:space="preserve">
            <source>This gives you control over how everything works, but you also have to spend more time developing and testing authentication functionality.</source>
            <target state="new">This gives you control over how everything works, but you also have to spend more time developing and testing authentication functionality.</target>
          </trans-unit>
        </group>
        <group id="149">
          <trans-unit id="150" translate="yes" xml:space="preserve">
            <source>Also, if you have multiple apps to protect with multiple redirect URLs, you have to configure multiple client IDs and client secrets with third-party authentication providers such as Facebook, Google, and Twitter.</source>
            <target state="new">Also, if you have multiple apps to protect with multiple redirect URLs, you have to configure multiple client IDs and client secrets with third-party authentication providers such as Facebook, Google, and Twitter.</target>
          </trans-unit>
        </group>
        <group id="150">
          <trans-unit id="151" translate="yes" xml:space="preserve">
            <source>At present App Service does not support using a do-it-yourself solution alongside gateway authentication, as is possible in </source>
            <target state="new">At present App Service does not support using a do-it-yourself solution alongside gateway authentication, as is possible in </target>
          </trans-unit>
        </group>
        <group id="151">
          <trans-unit id="152" translate="yes" xml:space="preserve">
            <source>Mobile Services</source>
            <target state="new">Mobile Services</target>
          </trans-unit>
        </group>
        <group id="152">
          <trans-unit id="153" translate="yes" xml:space="preserve">
            <source>.</source>
            <target state="new">.</target>
          </trans-unit>
        </group>
        <group id="153">
          <trans-unit id="154" translate="yes" xml:space="preserve">
            <source>&lt;a id="apim"&gt;&lt;/a&gt;Azure API Management</source>
            <target state="new">&lt;a id="apim"&gt;&lt;/a&gt;Azure API Management</target>
          </trans-unit>
        </group>
        <group id="154">
          <trans-unit id="155" translate="yes" xml:space="preserve">
            <source>If you have existing APIs that you want to protect with authentication, you can do that with the Azure API Management service.</source>
            <target state="new">If you have existing APIs that you want to protect with authentication, you can do that with the Azure API Management service.</target>
          </trans-unit>
        </group>
        <group id="155">
          <trans-unit id="156" translate="yes" xml:space="preserve">
            <source>For information about using API Management with API apps, see this blog post by Panos Kefalidis: </source>
            <target state="new">For information about using API Management with API apps, see this blog post by Panos Kefalidis: </target>
          </trans-unit>
        </group>
        <group id="156">
          <trans-unit id="157" translate="yes" xml:space="preserve">
            <source>Taking advantage of API Management for API Apps</source>
            <target state="new">Taking advantage of API Management for API Apps</target>
          </trans-unit>
        </group>
        <group id="157">
          <trans-unit id="158" translate="yes" xml:space="preserve">
            <source>Next steps</source>
            <target state="new">Next steps</target>
          </trans-unit>
        </group>
        <group id="158">
          <trans-unit id="159" translate="yes" xml:space="preserve">
            <source>This article has explained the authentication services provided by Azure App Service for API Apps and Mobile Apps.</source>
            <target state="new">This article has explained the authentication services provided by Azure App Service for API Apps and Mobile Apps.</target>
          </trans-unit>
        </group>
        <group id="159">
          <trans-unit id="160" translate="yes" xml:space="preserve">
            <source>Here are some links to resources for learning about the underlying authentication protocols, and documentation about how to use the App Service authentication features.</source>
            <target state="new">Here are some links to resources for learning about the underlying authentication protocols, and documentation about how to use the App Service authentication features.</target>
          </trans-unit>
        </group>
        <group id="160">
          <trans-unit id="161" translate="yes" xml:space="preserve">
            <source>OAuth 2.0, OpenID Connect, and JSON Web Tokens (JWT)</source>
            <target state="new">OAuth 2.0, OpenID Connect, and JSON Web Tokens (JWT)</target>
          </trans-unit>
        </group>
        <group id="161">
          <trans-unit id="162" translate="yes" xml:space="preserve">
            <source>API Apps resources</source>
            <target state="new">API Apps resources</target>
          </trans-unit>
        </group>
        <group id="162">
          <trans-unit id="163" translate="yes" xml:space="preserve">
            <source>API Apps client flow</source>
            <target state="new">API Apps client flow</target>
          </trans-unit>
        </group>
        <group id="163">
          <trans-unit id="164" translate="yes" xml:space="preserve">
            <source>API Apps server flow</source>
            <target state="new">API Apps server flow</target>
          </trans-unit>
        </group>
        <group id="164">
          <trans-unit id="165" translate="yes" xml:space="preserve">
            <source>API Apps on-behalf-of calls</source>
            <target state="new">API Apps on-behalf-of calls</target>
          </trans-unit>
        </group>
        <group id="165">
          <trans-unit id="166" translate="yes" xml:space="preserve">
            <source>Mobile Apps resources</source>
            <target state="new">Mobile Apps resources</target>
          </trans-unit>
        </group>
        <group id="166">
          <trans-unit id="167" translate="yes" xml:space="preserve">
            <source>Mobile Apps client flow</source>
            <target state="new">Mobile Apps client flow</target>
          </trans-unit>
        </group>
        <group id="167">
          <trans-unit id="168" translate="yes" xml:space="preserve">
            <source>Mobile Apps server flow</source>
            <target state="new">Mobile Apps server flow</target>
          </trans-unit>
        </group>
        <group id="168">
          <trans-unit id="169" translate="yes" xml:space="preserve">
            <source>Mobile Apps on-behalf-of calls</source>
            <target state="new">Mobile Apps on-behalf-of calls</target>
          </trans-unit>
        </group>
        <group id="169">
          <trans-unit id="170" translate="yes" xml:space="preserve">
            <source>&lt;a id="oauth"&gt;&lt;/a&gt;OAuth 2.0, OpenID Connect, and JSON Web Tokens (JWT)</source>
            <target state="new">&lt;a id="oauth"&gt;&lt;/a&gt;OAuth 2.0, OpenID Connect, and JSON Web Tokens (JWT)</target>
          </trans-unit>
        </group>
        <group id="170">
          <trans-unit id="171" translate="yes" xml:space="preserve">
            <source>Getting started with OAuth 2.0</source>
            <target state="new">Getting started with OAuth 2.0</target>
          </trans-unit>
        </group>
        <group id="171">
          <trans-unit id="172" translate="yes" xml:space="preserve">
            <source>Introduction to OAuth2, OpenID Connect and JSON Web Tokens (JWT) - PluralSight Course</source>
            <target state="new">Introduction to OAuth2, OpenID Connect and JSON Web Tokens (JWT) - PluralSight Course</target>
          </trans-unit>
        </group>
        <group id="172">
          <trans-unit id="173" translate="yes" xml:space="preserve">
            <source>Building and Securing a RESTful API for Multiple Clients in ASP.NET - PluralSight course</source>
            <target state="new">Building and Securing a RESTful API for Multiple Clients in ASP.NET - PluralSight course</target>
          </trans-unit>
        </group>
        <group id="173">
          <trans-unit id="174" translate="yes" xml:space="preserve">
            <source>&lt;a id="apiaclient"&gt;&lt;/a&gt;API Apps client flow</source>
            <target state="new">&lt;a id="apiaclient"&gt;&lt;/a&gt;API Apps client flow</target>
          </trans-unit>
        </group>
        <group id="174">
          <trans-unit id="175" translate="yes" xml:space="preserve">
            <source>Protect an API app</source>
            <target state="new">Protect an API app</target>
          </trans-unit>
        </group>
        <group id="175">
          <trans-unit id="176" translate="yes" xml:space="preserve">
            <source> - The API app configuration part applies to both client and server flow, but the test-in-browser part illustrates server flow.</source>
            <target state="new"> - The API app configuration part applies to both client and server flow, but the test-in-browser part illustrates server flow.</target>
          </trans-unit>
        </group>
        <group id="176">
          <trans-unit id="177" translate="yes" xml:space="preserve">
            <source>Consume an API app in Azure App Service from a .NET client</source>
            <target state="new">Consume an API app in Azure App Service from a .NET client</target>
          </trans-unit>
        </group>
        <group id="177">
          <trans-unit id="178" translate="yes" xml:space="preserve">
            <source> - The sample app for an authenticated call illustrates server flow, but it is followed by a </source>
            <target state="new"> - The sample app for an authenticated call illustrates server flow, but it is followed by a </target>
          </trans-unit>
        </group>
        <group id="178">
          <trans-unit id="179" translate="yes" xml:space="preserve">
            <source>client flow</source>
            <target state="new">client flow</target>
          </trans-unit>
        </group>
        <group id="179">
          <trans-unit id="180" translate="yes" xml:space="preserve">
            <source> section with sample code.</source>
            <target state="new"> section with sample code.</target>
          </trans-unit>
        </group>
        <group id="180">
          <trans-unit id="181" translate="yes" xml:space="preserve">
            <source>&lt;a id="apiaserver"&gt;&lt;/a&gt;API Apps server flow</source>
            <target state="new">&lt;a id="apiaserver"&gt;&lt;/a&gt;API Apps server flow</target>
          </trans-unit>
        </group>
        <group id="181">
          <trans-unit id="182" translate="yes" xml:space="preserve">
            <source>Protect an API app</source>
            <target state="new">Protect an API app</target>
          </trans-unit>
        </group>
        <group id="182">
          <trans-unit id="183" translate="yes" xml:space="preserve">
            <source> - The API app configuration part applies to both client and server flow, and the test-in-browser part illustrates server flow.</source>
            <target state="new"> - The API app configuration part applies to both client and server flow, and the test-in-browser part illustrates server flow.</target>
          </trans-unit>
        </group>
        <group id="183">
          <trans-unit id="184" translate="yes" xml:space="preserve">
            <source>Consume an API app in Azure App Service from a .NET client</source>
            <target state="new">Consume an API app in Azure App Service from a .NET client</target>
          </trans-unit>
        </group>
        <group id="184">
          <trans-unit id="185" translate="yes" xml:space="preserve">
            <source> - The sample code for an authenticated call illustrates server flow.</source>
            <target state="new"> - The sample code for an authenticated call illustrates server flow.</target>
          </trans-unit>
        </group>
        <group id="185">
          <trans-unit id="186" translate="yes" xml:space="preserve">
            <source>&lt;a id="apiaobo"&gt;&lt;/a&gt;API Apps on-behalf-of calls</source>
            <target state="new">&lt;a id="apiaobo"&gt;&lt;/a&gt;API Apps on-behalf-of calls</target>
          </trans-unit>
        </group>
        <group id="186">
          <trans-unit id="187" translate="yes" xml:space="preserve">
            <source>Deploy and configure a SaaS connector API app in Azure App Service</source>
            <target state="new">Deploy and configure a SaaS connector API app in Azure App Service</target>
          </trans-unit>
        </group>
        <group id="187">
          <trans-unit id="188" translate="yes" xml:space="preserve">
            <source> - Illustrates how to provision a prepackaged connector API app, configure it, and call it using browser tools.</source>
            <target state="new"> - Illustrates how to provision a prepackaged connector API app, configure it, and call it using browser tools.</target>
          </trans-unit>
        </group>
        <group id="188">
          <trans-unit id="189" translate="yes" xml:space="preserve">
            <source>Connect to a SaaS platform from an ASP.NET API app in Azure App Service</source>
            <target state="new">Connect to a SaaS platform from an ASP.NET API app in Azure App Service</target>
          </trans-unit>
        </group>
        <group id="189">
          <trans-unit id="190" translate="yes" xml:space="preserve">
            <source> - Illustrates how to write your own connector -- that is, provision, configure, and write code for a custom API app that makes on-behalf-of calls to a SaaS provider.</source>
            <target state="new"> - Illustrates how to write your own connector -- that is, provision, configure, and write code for a custom API app that makes on-behalf-of calls to a SaaS provider.</target>
          </trans-unit>
        </group>
        <group id="190">
          <trans-unit id="191" translate="yes" xml:space="preserve">
            <source>&lt;a id="maclient"&gt;&lt;/a&gt;Mobile Apps client flow</source>
            <target state="new">&lt;a id="maclient"&gt;&lt;/a&gt;Mobile Apps client flow</target>
          </trans-unit>
        </group>
        <group id="191">
          <trans-unit id="192" translate="yes" xml:space="preserve">
            <source>Add Azure Active Directory single sign-on to your iOS app</source>
            <target state="new">Add Azure Active Directory single sign-on to your iOS app</target>
          </trans-unit>
        </group>
        <group id="192">
          <trans-unit id="193" translate="yes" xml:space="preserve">
            <source>&lt;a id="maserver"&gt;&lt;/a&gt;Mobile Apps server flow</source>
            <target state="new">&lt;a id="maserver"&gt;&lt;/a&gt;Mobile Apps server flow</target>
          </trans-unit>
        </group>
        <group id="193">
          <trans-unit id="194" translate="yes" xml:space="preserve">
            <source>Add authentication to your iOS app</source>
            <target state="new">Add authentication to your iOS app</target>
          </trans-unit>
        </group>
        <group id="194">
          <trans-unit id="195" translate="yes" xml:space="preserve">
            <source>Add authentication to your Xamarin.iOS app</source>
            <target state="new">Add authentication to your Xamarin.iOS app</target>
          </trans-unit>
        </group>
        <group id="195">
          <trans-unit id="196" translate="yes" xml:space="preserve">
            <source>Add authentication to your Xamarin.Android app</source>
            <target state="new">Add authentication to your Xamarin.Android app</target>
          </trans-unit>
        </group>
        <group id="196">
          <trans-unit id="197" translate="yes" xml:space="preserve">
            <source>Add authentication to your Windows app</source>
            <target state="new">Add authentication to your Windows app</target>
          </trans-unit>
        </group>
        <group id="197">
          <trans-unit id="198" translate="yes" xml:space="preserve">
            <source>&lt;a id="maobo"&gt;&lt;/a&gt;Mobile Apps on-behalf-of calls to secured resources</source>
            <target state="new">&lt;a id="maobo"&gt;&lt;/a&gt;Mobile Apps on-behalf-of calls to secured resources</target>
          </trans-unit>
        </group>
        <group id="198">
          <trans-unit id="199" translate="yes" xml:space="preserve">
            <source>Obtain an access token and call the SharePoint API in a mobile app</source>
            <target state="new">Obtain an access token and call the SharePoint API in a mobile app</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>